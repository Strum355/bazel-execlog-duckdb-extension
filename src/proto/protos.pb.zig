// Code generated by protoc-gen-zig
///! package protos
const std = @import("std");
const Allocator = std.mem.Allocator;
const ArrayList = std.ArrayList;

const protobuf = @import("protobuf");
const ManagedString = protobuf.ManagedString;
const fd = protobuf.fd;
/// import package google.protobuf
const google_protobuf = @import("google/protobuf.pb.zig");

pub const Digest = struct {
    hash: ManagedString = .Empty,
    size_bytes: i64 = 0,
    hash_function_name: ManagedString = .Empty,

    pub const _desc_table = .{
        .hash = fd(1, .String),
        .size_bytes = fd(2, .{ .Varint = .Simple }),
        .hash_function_name = fd(3, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const File = struct {
    path: ManagedString = .Empty,
    symlink_target_path: ManagedString = .Empty,
    digest: ?Digest = null,
    is_tool: bool = false,

    pub const _desc_table = .{
        .path = fd(1, .String),
        .symlink_target_path = fd(4, .String),
        .digest = fd(2, .{ .SubMessage = {} }),
        .is_tool = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EnvironmentVariable = struct {
    name: ManagedString = .Empty,
    value: ManagedString = .Empty,

    pub const _desc_table = .{
        .name = fd(1, .String),
        .value = fd(2, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const Platform = struct {
    properties: ArrayList(Property),

    pub const _desc_table = .{
        .properties = fd(1, .{ .List = .{ .SubMessage = {} } }),
    };

    pub const Property = struct {
        name: ManagedString = .Empty,
        value: ManagedString = .Empty,

        pub const _desc_table = .{
            .name = fd(1, .String),
            .value = fd(2, .String),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SpawnMetrics = struct {
    total_time: ?google_protobuf.Duration = null,
    parse_time: ?google_protobuf.Duration = null,
    network_time: ?google_protobuf.Duration = null,
    fetch_time: ?google_protobuf.Duration = null,
    queue_time: ?google_protobuf.Duration = null,
    setup_time: ?google_protobuf.Duration = null,
    upload_time: ?google_protobuf.Duration = null,
    execution_wall_time: ?google_protobuf.Duration = null,
    process_outputs_time: ?google_protobuf.Duration = null,
    retry_time: ?google_protobuf.Duration = null,
    input_bytes: i64 = 0,
    input_files: i64 = 0,
    memory_estimate_bytes: i64 = 0,
    input_bytes_limit: i64 = 0,
    input_files_limit: i64 = 0,
    output_bytes_limit: i64 = 0,
    output_files_limit: i64 = 0,
    memory_bytes_limit: i64 = 0,
    time_limit: ?google_protobuf.Duration = null,
    start_time: ?google_protobuf.Timestamp = null,

    pub const _desc_table = .{
        .total_time = fd(1, .{ .SubMessage = {} }),
        .parse_time = fd(2, .{ .SubMessage = {} }),
        .network_time = fd(3, .{ .SubMessage = {} }),
        .fetch_time = fd(4, .{ .SubMessage = {} }),
        .queue_time = fd(5, .{ .SubMessage = {} }),
        .setup_time = fd(6, .{ .SubMessage = {} }),
        .upload_time = fd(7, .{ .SubMessage = {} }),
        .execution_wall_time = fd(8, .{ .SubMessage = {} }),
        .process_outputs_time = fd(9, .{ .SubMessage = {} }),
        .retry_time = fd(10, .{ .SubMessage = {} }),
        .input_bytes = fd(11, .{ .Varint = .Simple }),
        .input_files = fd(12, .{ .Varint = .Simple }),
        .memory_estimate_bytes = fd(13, .{ .Varint = .Simple }),
        .input_bytes_limit = fd(14, .{ .Varint = .Simple }),
        .input_files_limit = fd(15, .{ .Varint = .Simple }),
        .output_bytes_limit = fd(16, .{ .Varint = .Simple }),
        .output_files_limit = fd(17, .{ .Varint = .Simple }),
        .memory_bytes_limit = fd(18, .{ .Varint = .Simple }),
        .time_limit = fd(19, .{ .SubMessage = {} }),
        .start_time = fd(20, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SpawnExec = struct {
    command_args: ArrayList(ManagedString),
    environment_variables: ArrayList(EnvironmentVariable),
    platform: ?Platform = null,
    inputs: ArrayList(File),
    listed_outputs: ArrayList(ManagedString),
    remotable: bool = false,
    cacheable: bool = false,
    timeout_millis: i64 = 0,
    mnemonic: ManagedString = .Empty,
    actual_outputs: ArrayList(File),
    runner: ManagedString = .Empty,
    cache_hit: bool = false,
    status: ManagedString = .Empty,
    exit_code: i32 = 0,
    remote_cacheable: bool = false,
    target_label: ManagedString = .Empty,
    digest: ?Digest = null,
    metrics: ?SpawnMetrics = null,

    pub const _desc_table = .{
        .command_args = fd(1, .{ .List = .String }),
        .environment_variables = fd(2, .{ .List = .{ .SubMessage = {} } }),
        .platform = fd(3, .{ .SubMessage = {} }),
        .inputs = fd(4, .{ .List = .{ .SubMessage = {} } }),
        .listed_outputs = fd(5, .{ .List = .String }),
        .remotable = fd(6, .{ .Varint = .Simple }),
        .cacheable = fd(7, .{ .Varint = .Simple }),
        .timeout_millis = fd(8, .{ .Varint = .Simple }),
        .mnemonic = fd(10, .String),
        .actual_outputs = fd(11, .{ .List = .{ .SubMessage = {} } }),
        .runner = fd(12, .String),
        .cache_hit = fd(13, .{ .Varint = .Simple }),
        .status = fd(14, .String),
        .exit_code = fd(15, .{ .Varint = .Simple }),
        .remote_cacheable = fd(16, .{ .Varint = .Simple }),
        .target_label = fd(18, .String),
        .digest = fd(19, .{ .SubMessage = {} }),
        .metrics = fd(20, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExecLogEntry = struct {
    id: i32 = 0,
    type: ?type_union,

    pub const _type_case = enum {
        invocation,
        file,
        directory,
        unresolved_symlink,
        input_set,
        spawn,
    };
    pub const type_union = union(_type_case) {
        invocation: Invocation,
        file: ExecLogEntry.File,
        directory: Directory,
        unresolved_symlink: UnresolvedSymlink,
        input_set: InputSet,
        spawn: Spawn,
        pub const _union_desc = .{
            .invocation = fd(2, .{ .SubMessage = {} }),
            .file = fd(3, .{ .SubMessage = {} }),
            .directory = fd(4, .{ .SubMessage = {} }),
            .unresolved_symlink = fd(5, .{ .SubMessage = {} }),
            .input_set = fd(6, .{ .SubMessage = {} }),
            .spawn = fd(7, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .id = fd(1, .{ .Varint = .Simple }),
        .type = fd(null, .{ .OneOf = type_union }),
    };

    pub const Invocation = struct {
        hash_function_name: ManagedString = .Empty,

        pub const _desc_table = .{
            .hash_function_name = fd(1, .String),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub const File = struct {
        path: ManagedString = .Empty,
        digest: ?Digest = null,

        pub const _desc_table = .{
            .path = fd(1, .String),
            .digest = fd(2, .{ .SubMessage = {} }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub const Directory = struct {
        path: ManagedString = .Empty,
        files: ArrayList(ExecLogEntry.File),

        pub const _desc_table = .{
            .path = fd(1, .String),
            .files = fd(2, .{ .List = .{ .SubMessage = {} } }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub const UnresolvedSymlink = struct {
        path: ManagedString = .Empty,
        target_path: ManagedString = .Empty,

        pub const _desc_table = .{
            .path = fd(1, .String),
            .target_path = fd(2, .String),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub const InputSet = struct {
        file_ids: ArrayList(i32),
        directory_ids: ArrayList(i32),
        unresolved_symlink_ids: ArrayList(i32),
        transitive_set_ids: ArrayList(i32),

        pub const _desc_table = .{
            .file_ids = fd(1, .{ .PackedList = .{ .Varint = .Simple } }),
            .directory_ids = fd(2, .{ .PackedList = .{ .Varint = .Simple } }),
            .unresolved_symlink_ids = fd(3, .{ .PackedList = .{ .Varint = .Simple } }),
            .transitive_set_ids = fd(4, .{ .PackedList = .{ .Varint = .Simple } }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub const Output = struct {
        type: ?Output.type_union,

        pub const _type_case = enum {
            file_id,
            directory_id,
            unresolved_symlink_id,
            invalid_output_path,
        };
        pub const type_union = union(Output._type_case) {
            file_id: i32,
            directory_id: i32,
            unresolved_symlink_id: i32,
            invalid_output_path: ManagedString,
            pub const _union_desc = .{
                .file_id = fd(1, .{ .Varint = .Simple }),
                .directory_id = fd(2, .{ .Varint = .Simple }),
                .unresolved_symlink_id = fd(3, .{ .Varint = .Simple }),
                .invalid_output_path = fd(4, .String),
            };
        };

        pub const _desc_table = .{
            .type = fd(null, .{ .OneOf = Output.type_union }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub const Spawn = struct {
        args: ArrayList(ManagedString),
        env_vars: ArrayList(EnvironmentVariable),
        platform: ?Platform = null,
        input_set_id: i32 = 0,
        tool_set_id: i32 = 0,
        outputs: ArrayList(ExecLogEntry.Output),
        target_label: ManagedString = .Empty,
        mnemonic: ManagedString = .Empty,
        exit_code: i32 = 0,
        status: ManagedString = .Empty,
        runner: ManagedString = .Empty,
        cache_hit: bool = false,
        remotable: bool = false,
        cacheable: bool = false,
        remote_cacheable: bool = false,
        digest: ?Digest = null,
        timeout_millis: i64 = 0,
        metrics: ?SpawnMetrics = null,

        pub const _desc_table = .{
            .args = fd(1, .{ .List = .String }),
            .env_vars = fd(2, .{ .List = .{ .SubMessage = {} } }),
            .platform = fd(3, .{ .SubMessage = {} }),
            .input_set_id = fd(4, .{ .Varint = .Simple }),
            .tool_set_id = fd(5, .{ .Varint = .Simple }),
            .outputs = fd(6, .{ .List = .{ .SubMessage = {} } }),
            .target_label = fd(7, .String),
            .mnemonic = fd(8, .String),
            .exit_code = fd(9, .{ .Varint = .Simple }),
            .status = fd(10, .String),
            .runner = fd(11, .String),
            .cache_hit = fd(12, .{ .Varint = .Simple }),
            .remotable = fd(13, .{ .Varint = .Simple }),
            .cacheable = fd(14, .{ .Varint = .Simple }),
            .remote_cacheable = fd(15, .{ .Varint = .Simple }),
            .digest = fd(16, .{ .SubMessage = {} }),
            .timeout_millis = fd(17, .{ .Varint = .Simple }),
            .metrics = fd(18, .{ .SubMessage = {} }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};
